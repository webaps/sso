version: '3.8'

services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    links:
      - app
    networks:
      - proxy
      - sso
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src:/var/www/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sso"
      - "traefik.docker.network=proxy"
#      - "traefik.http.routers.sso.entrypoints=websecure"
      - "traefik.http.routers.sso.rule=Host(`${APP_URL}`)"
      - "traefik.http.services.sso.loadbalancer.server.port=80"

  app:
    build:
      context: ./
      dockerfile: app.dockerfile
    restart: unless-stopped
    links:
      - postgres
      - redis
    networks:
      - sso
    env_file: ./.env
    volumes:
      - ./src:/var/www/html

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sso

  redis:
    image: redis:latest
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - sso


networks:
  proxy:
    external: true
  sso:
    external: false

volumes:
  sso-storage:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local